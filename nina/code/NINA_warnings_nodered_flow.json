[{"id":"c17753c18e34c516","type":"function","z":"459042de3957a3c2","name":"2. Warnungen auslesen und Nachricht zusammenbauen","func":"// ----------------------------------------------------------------------------\n// NINA-Warnungen - NodeRED-Funktion\n// Version: 1.12\n// Datum: 12.04.2023\n// Quelle: https://github.com/migacode/home-assistant\n// ----------------------------------------------------------------------------\n// Initialisierung\n// ----------------------------------------------------------------------------\n// Entitäten der NINA-Sensoren (Name OHNE Nummer aber mit Unterstrich am Ende)\nvar nina_entity_name = 'binary_sensor.nina_warning_hoerstel_';\n// ----------------------------------------------------------------------------\n// Alten Payload löschen um keine Daten daraus mit weiterzuleiten\nmsg.payload = [];\n// Status aller Home Assistant Entitäten einlesen\nvar global_states = global.get('homeassistant.homeAssistant.states');\n// Anzahl beobachteter NINA-Warnungen\nvar number_of_nina_warnings = 5;\n// ----------------------------------------------------------------------------\n// Alle Warnungen durchlaufen\n// ----------------------------------------------------------------------------\nfor (var i = 1; i <= number_of_nina_warnings; i++)\n{\n  // Daten des NINA-Sensors extrahieren\n  var entity_current_data = global_states[nina_entity_name + i];\n  // Wenn die Warnung aktiv ist, dann Nachricht erstellen\n  if (entity_current_data.state == 'on')\n  {\n    // Neue leere Nachricht erzeugen\n    var currentMsg = {};\n    // Nachricht aus den einzelnen Warnmeldungs-Komponenten zusammenbauen\n    // Warnstufen übersetzen\n    var level = entity_current_data.attributes.severity;\n    level = level.replace('Minor','Gering').replace('Moderate','Mäßig').replace('Severe','Schwer').replace('Extreme','Extrem');\n    currentMsg.payload = {\n      message: \"⚡ *NINA-WARNUNG!* ⚡️ (über Node-RED)\\n\\n\" +\n        entity_current_data.attributes.headline + \"\\n\" +\n        \"Warnstufe: \" + level + \"\\n\" +\n        entity_current_data.attributes.description + \"\\n\" +\n        \"Von \" + time_convert(entity_current_data.attributes.start) + \" Uhr \" +\n        \"bis \" + time_convert(entity_current_data.attributes.expires) + \" Uhr.\"\n    }\n    // Fertige Nachricht als Payload (Message) an folgende/n Node/s senden\n    node.send(currentMsg);\n  }\n}\n// ----------------------------------------------------------------------------\n// Funktions-Node OHNE Rückmeldung beenden, da bereits Daten gesendet wurden\n// ----------------------------------------------------------------------------\nreturn null;\n// ----------------------------------------------------------------------------\n// Funktion zur Umwandlung einer ISO-Zeitangabe in ein eigenes Format\n// ----------------------------------------------------------------------------\nfunction time_convert(iso_string) {\n  var date = new Date(iso_string);\n  var year = parseInt(date.getFullYear());\n  var month = parseInt(date.getMonth()) + 1;\n  var day = parseInt(date.getDate());\n  var hour = parseInt(date.getHours());\n  var minute = parseInt(date.getMinutes());\n  if (day < 10) { day = '0' + day; }\n  if (month < 10) { month = '0' + month; }\n  if (hour < 10) { hour = '0' + hour; }\n  if (minute < 10) { minute = '0' + minute; }\n  return day + '.' + month + '.' + year + ' um ' + hour + ':' + minute;\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":160,"wires":[["36e6b2d9c98b328f","239fb57f99755642","a8c65de21f592710"]]},{"id":"5ac9dc8c7ea3b2c3","type":"server-state-changed","z":"459042de3957a3c2","name":"1. NINA Warnungen triggern","server":"e5ff3427.b49de8","version":4,"exposeToHomeAssistant":false,"haConfig":[{"property":"name","value":""},{"property":"icon","value":""}],"entityidfilter":["binary_sensor.nina_warning_hoerstel_1","binary_sensor.nina_warning_hoerstel_2","binary_sensor.nina_warning_hoerstel_3","binary_sensor.nina_warning_hoerstel_4","binary_sensor.nina_warning_hoerstel_5"],"entityidfiltertype":"list","outputinitially":false,"state_type":"str","haltifstate":"on","halt_if_type":"str","halt_if_compare":"is","outputs":2,"output_only_on_state_change":true,"for":"0","forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[],"x":180,"y":80,"wires":[["c17753c18e34c516"],[]]},{"id":"a8c65de21f592710","type":"api-call-service","z":"459042de3957a3c2","name":"3.a Nachricht an Telegram senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"telegram_michael","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : payload.message }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":740,"y":80,"wires":[[]]},{"id":"36e6b2d9c98b328f","type":"api-call-service","z":"459042de3957a3c2","name":"3.c Nachricht an Dashboard senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"persistent_notification","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : payload.message }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":740,"y":240,"wires":[[]]},{"id":"239fb57f99755642","type":"api-call-service","z":"459042de3957a3c2","name":"3.b Nachricht an HA-App senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_galaxy_von_michael","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : payload.message }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":740,"y":160,"wires":[[]]},{"id":"e5ff3427.b49de8","type":"server","name":"Home Assistant","addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"","connectionDelay":false,"cacheJson":false,"heartbeat":false,"heartbeatInterval":"","statusSeparator":"","enableGlobalContextStore":false}]