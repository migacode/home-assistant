[{"id":"b10c730e617f8d78","type":"inject","z":"d4ee1faf749cbf75","name":"1. Alle 5 Minuten","props":[],"repeat":"300","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":170,"y":140,"wires":[["a1672060c25d0947"]]},{"id":"a1672060c25d0947","type":"delay","z":"d4ee1faf749cbf75","name":"2. Zufällige Verzögerung von 00:00 bis 04:59","pauseType":"random","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"0","randomLast":"299","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":490,"y":140,"wires":[["a58b72e432b7c825"]]},{"id":"beb73bbe1e1d5528","type":"api-call-service","z":"d4ee1faf749cbf75","name":"4.a Light umschalten","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"light","service":"toggle","areaId":[],"deviceId":[],"entityId":["{{ payload.entity_id }}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":520,"y":240,"wires":[[]]},{"id":"2dbb5ba5c04cc551","type":"api-call-service","z":"d4ee1faf749cbf75","name":"4.b Switch umschalten","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"switch","service":"toggle","areaId":[],"deviceId":[],"entityId":["{{ payload.entity_id }}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":520,"y":280,"wires":[[]]},{"id":"b07aaad5be749ef3","type":"comment","z":"d4ee1faf749cbf75","name":"Spooky der Hausgeist (Anwesenheits-Simulation) 1.00 kompakt","info":"","x":290,"y":80,"wires":[]},{"id":"a58b72e432b7c825","type":"function","z":"d4ee1faf749cbf75","name":"3. Zufälliges Gerät auswählen","func":"// ----------------------------------------------------------------------------\n// Spooky der Hausgeist - NodeRED-Funktion\n// Version: 1.00 (kompakt)\n// Datum: 28.06.2023\n// Quelle: https://github.com/migacode/home-assistant\n// ----------------------------------------------------------------------------\n// Initialisierung\n// ----------------------------------------------------------------------------\nmsg.payload = [];     // Alten Payload löschen um keine Daten daraus weiterzuleiten\nvar newMsg = {};      // Neue leere Meldung erzeugen\nvar entity_data = []; // Container für Entitäts-Daten\n// Status aller Home Assistant Entitäten einlesen\nvar global_states = global.get('homeassistant.homeAssistant.states');\n// ----------------------------------------------------------------------------\n// Nur weitermachen, wenn der Hausgeist aktiv ist\nentity_data = global_states['input_boolean.spookymode'];\nif (entity_data.state == 'on')\n{\n  // Nur weitermachen, wenn es dunkel ist\n  entity_data = global_states['sun.sun'];\n  if (entity_data.state != 'above_horizon')\n  {\n    var group_light_data = global_states['light.spooky_lights'];\n    var count_l = group_light_data.attributes.entity_id.length;\n    var group_switch_data = global_states['switch.spooky_switches'];\n    var count_s = group_switch_data.attributes.entity_id.length;\n    var range_max = count_l + count_s;\n    var random_val = Math.floor(Math.random() * range_max) + 1;\n    var group = \"\";\n    if (count_l > 0 && count_s > 0) {\n      if (random_val > count_l) {\n        group = \"switch\";\n      }\n      else {\n        group = \"light\";\n      }\n    }\n    else {\n      if (count_l > 0) {\n        group = \"light\";\n      }\n      if (count_s > 0) {\n        group = \"switch\";\n      }\n    }\n    if (group == \"light\") {\n      var random_device = Math.floor(Math.random() * count_l);\n      var device_entity = group_light_data.attributes.entity_id[random_device];\n      newMsg.payload = {\n        entity_id: device_entity\n      }\n      return [newMsg, null];\n    }\n    if (group == \"switch\") {\n      var random_device = Math.floor(Math.random() * count_s);\n      var device_entity = group_switch_data.attributes.entity_id[random_device];\n      newMsg.payload = {\n        entity_id: device_entity\n      }\n      return [null, newMsg];\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// Funktions-Node OHNE Rückmeldung beenden, da bereits Daten gesendet wurden\n// ----------------------------------------------------------------------------\nreturn null;\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":230,"y":260,"wires":[["beb73bbe1e1d5528"],["2dbb5ba5c04cc551"]]},{"id":"e5ff3427.b49de8","type":"server","name":"Home Assistant","addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"","connectionDelay":false,"cacheJson":false,"heartbeat":false,"heartbeatInterval":"","statusSeparator":"","enableGlobalContextStore":false}]