[{"id":"41a7ea61070c39b0","type":"tab","label":"Spooky 1.10","disabled":false,"info":"","env":[]},{"id":"8341c6e53a008184","type":"delay","z":"41a7ea61070c39b0","name":"2. Zufällige Verzögerung von 00:00 bis 04:59","pauseType":"random","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"0","randomLast":"299","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":510,"y":120,"wires":[["54dc45c4440e94c9"]]},{"id":"6f52c96ff5fe3c82","type":"api-call-service","z":"41a7ea61070c39b0","name":"4.a Light umschalten","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"light","service":"toggle","areaId":[],"deviceId":[],"entityId":["{{ payload.entity_id }}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":200,"wires":[[]]},{"id":"a1075099576cfaf5","type":"api-call-service","z":"41a7ea61070c39b0","name":"4.b Switch umschalten","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"switch","service":"toggle","areaId":[],"deviceId":[],"entityId":["{{ payload.entity_id }}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":280,"wires":[[]]},{"id":"e3ec09b4911793b3","type":"comment","z":"41a7ea61070c39b0","name":"Spooky der Hausgeist (Anwesenheits-Simulation) 1.10","info":"","x":260,"y":60,"wires":[]},{"id":"54dc45c4440e94c9","type":"function","z":"41a7ea61070c39b0","name":"3. Zufälliges Gerät auswählen","func":"// ============================================================================\n// Spooky der Hausgeist (Anwesenheits-Simulation) - NodeRED-Funktionsblock\n// Version: 1.10\n// Datum:   12.04.2024\n// Quelle:  https://github.com/migacode/home-assistant\n// ============================================================================\n// Konfiguration\n// ============================================================================\n// Spooky-Modus überprüfen (true | false)\n// HINWEIS: Ist hier deaktiviert, da der Status bereits in Node 1 geprüft wird\nvar check_spooky_mode = false;\n// Sonnenstand (Tag/Nacht) berücksichtigen\n// true  : Es wird nur geschaltet, wenn es draussen dunkel ist\n// false : Es wird unabhängig vom Sonnenstand (der Tageszeit) immer geschaltet\nvar check_sun_state   = true;\n// ============================================================================\n// Here we go ...\n// ============================================================================\n// ----------------------------------------------------------------------------\n// Nur weitermachen, wenn Spooky aktiv (oder diese Prüfung deaktiviert) ist\n// ----------------------------------------------------------------------------\nif (!check_spooky_mode || msg.spooky_mode.daten.state == 'on')\n{\n  // --------------------------------------------------------------------------\n  // Nur weitermachen, wenn es dunkel (oder diese Prüfung deaktiviert) ist\n  // --------------------------------------------------------------------------\n  if (!check_sun_state || msg.sun_state.daten.state != 'above_horizon')\n  {\n    // ------------------------------------------------------------------------\n    // Daten der Spooky-Gruppen \"Lights\" und \"Switches\" einlesen\n    // ------------------------------------------------------------------------\n    var spooky_lights   = msg.spooky_lights;\n    var spooky_switches = msg.spooky_switches;\n    // ------------------------------------------------------------------------\n    // Anzahl der vorhandenen Einträge (Geräte) je Gruppe ermitteln\n    // ------------------------------------------------------------------------\n    var count_l = spooky_lights.daten.attributes.entity_id.length;\n    var count_s = spooky_switches.daten.attributes.entity_id.length;\n    // ------------------------------------------------------------------------\n    // Gruppe auswählen (gewichtet nach der Anzahl aller Einträge der Gruppen)\n    // ------------------------------------------------------------------------\n    var range_max = count_l + count_s;\n    var random_val = Math.floor(Math.random() * range_max) + 1;\n    var group = \"\";\n    if (count_l > 0 && count_s > 0)\n    {\n      if (random_val > count_l)\n      {\n        group = \"switch\";\n      }\n      else\n      {\n        group = \"light\";\n      }\n    }\n    else\n    {\n      if (count_l > 0)\n      {\n        group = \"light\";\n      }\n      if (count_s > 0)\n      {\n        group = \"switch\";\n      }\n    }\n    // ------------------------------------------------------------------------\n    // Alten Payload löschen, um keine Daten daraus mit weiterzuleiten\n    // ------------------------------------------------------------------------\n    msg.payload = [];\n    // ------------------------------------------------------------------------\n    // Neue leere Meldung erzeugen\n    // ------------------------------------------------------------------------\n    var newMsg = {};\n    // ------------------------------------------------------------------------\n    // Wenn die Gruppe \"light\" verwendet werden soll, dann einen zufälligen\n    // Eintrag aus dieser Gruppe auswählen und auf Ausgang 1 ausgeben\n    // ------------------------------------------------------------------------\n    if (group == \"light\")\n    {\n      var random_device = Math.floor(Math.random() * count_l);\n      var device_entity = spooky_lights.daten.attributes.entity_id[random_device];\n      newMsg.payload = {\n        entity_id: device_entity\n      }\n      node.send([newMsg, null]); // asynchron\n      node.done();\n      // return [newMsg, null]; // synchron\n    }\n    // ------------------------------------------------------------------------\n    // Wenn die Gruppe \"switch\" verwendet werden soll, dann einen zufälligen\n    // Eintrag aus dieser Gruppe auswählen und auf Ausgang 2 ausgeben\n    // ------------------------------------------------------------------------\n    if (group == \"switch\")\n    {\n      var random_device = Math.floor(Math.random() * count_s);\n      var device_entity = spooky_switches.daten.attributes.entity_id[random_device];\n      newMsg.payload = {\n        entity_id: device_entity\n      }\n      node.send([null, newMsg]); // asynchron\n      node.done();\n      // return [null, newMsg]; // synchron\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// Skript OHNE Rückmeldung beenden (Daten wurden schon mit node.send gesendet)\n// ----------------------------------------------------------------------------\nreturn null;\n","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":240,"wires":[["6f52c96ff5fe3c82"],["a1075099576cfaf5"]]},{"id":"0e33e698762811f4","type":"poll-state","z":"41a7ea61070c39b0","name":"1. Alle 5 Minuten triggern","server":"e5ff3427.b49de8","version":3,"exposeAsEntityConfig":"","updateInterval":"5","updateIntervalType":"num","updateIntervalUnits":"minutes","outputInitially":false,"outputOnChanged":false,"entityId":"input_boolean.spookymode","stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputs":2,"outputProperties":[{"property":"spooky_mode","propertyType":"msg","value":"{\"daten\":$entities(\"input_boolean.spookymode\")}","valueType":"jsonata"},{"property":"sun_state","propertyType":"msg","value":"{\"daten\":$entities(\"sun.sun\")}","valueType":"jsonata"},{"property":"spooky_lights","propertyType":"msg","value":"{\"daten\":$entities(\"light.spooky_lights\")}","valueType":"jsonata"},{"property":"spooky_switches","propertyType":"msg","value":"{\"daten\":$entities(\"switch.spooky_switches\")}","valueType":"jsonata"}],"x":170,"y":120,"wires":[["8341c6e53a008184"],[]]},{"id":"e5ff3427.b49de8","type":"server","name":"Home Assistant","addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"","connectionDelay":false,"cacheJson":false,"heartbeat":false,"heartbeatInterval":"","statusSeparator":"","enableGlobalContextStore":false}]