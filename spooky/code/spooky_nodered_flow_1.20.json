[{"id":"24ffde2171d8d251","type":"tab","label":"Spooky 1.20","disabled":false,"info":"","env":[]},{"id":"a5b19c82b607d17d","type":"delay","z":"24ffde2171d8d251","name":"2. Zufällige Verzögerung von 00:00 bis 04:59","pauseType":"random","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"0","randomLast":"299","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":510,"y":120,"wires":[["3eac4da4683c814f"]]},{"id":"63dc0660d2e0af35","type":"api-call-service","z":"24ffde2171d8d251","name":"4. Gerät umschalten","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"homeassistant","service":"toggle","areaId":[],"deviceId":[],"entityId":["{{ payload.entity_id }}"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":540,"y":200,"wires":[[]]},{"id":"40f547bbec85b53c","type":"comment","z":"24ffde2171d8d251","name":"Spooky der Hausgeist (Anwesenheits-Simulation) 1.20","info":"","x":260,"y":60,"wires":[]},{"id":"3eac4da4683c814f","type":"function","z":"24ffde2171d8d251","name":"3. Zufälliges Gerät auswählen","func":"// ============================================================================\n// Spooky der Hausgeist (Anwesenheits-Simulation) - NodeRED-Funktionsblock\n// Version: 1.20\n// Datum:   14.04.2024\n// Quelle:  https://github.com/migacode/home-assistant\n// ============================================================================\n// Konfiguration\n// ============================================================================\n// Spooky-Modus überprüfen (true | false)\n// HINWEIS: Ist hier deaktiviert, da der Status bereits in Node 1 geprüft wird\nvar check_spooky_mode  = false;\n// ----------------------------------------\n// Sonnenstand (Tag/Nacht) berücksichtigen\n// true  : Es wird nur geschaltet, wenn es draussen dunkel ist\n// false : Es wird unabhängig vom Sonnenstand (der Tageszeit) immer geschaltet\nvar check_sun_state    = true;\n// ----------------------------------------------------------------\n// Quell-Liste aus der die zu schaltenden Geräte ausgewählt werden\n// true  : Aus der weiter unten stehenden Geräte-Liste \"spooky_device_list\"\n// false : Aus den in Home Assistant angelegten Geräte-Gruppen bzw. Helfern\n//         mit den IDs \"spooky_lights\" und \"spooky_switches\"\n// ACHTUNG: Bei Verwendung der Geräte-Liste muss die Liste \"spooky_device_list\"\n// weiter unten natürlich noch an die eigenen Entitäten angepasst werden!\nvar use_device_list    = false;\n// ------------------------------------------------------------------------\n// Liste der zu schaltenden Geräte wenn \"use_device_list\" auf \"true\" steht\nvar spooky_device_list = [\n  'light.licht_1',\n  'light.licht_2',\n  'light.licht_gruppe_1',\n  'switch.schalter_1',\n  'switch.schalter_2',\n  'switch.schalter_gruppe_1'\n  ];\n// ============================================================================\n// Here we go ...\n// ============================================================================\n// ----------------------------------------------------------------------------\n// Nur weitermachen, wenn Spooky aktiv (oder diese Prüfung deaktiviert) ist\n// ----------------------------------------------------------------------------\nif (!check_spooky_mode || msg.spooky_mode.daten.state == 'on')\n{\n  // --------------------------------------------------------------------------\n  // Nur weitermachen, wenn es dunkel (oder diese Prüfung deaktiviert) ist\n  // --------------------------------------------------------------------------\n  if (!check_sun_state || msg.sun_state.daten.state != 'above_horizon')\n  {\n    var random_device = 0;\n    var device_entity = \"\";\n    // ------------------------------------------------------------------------\n    // Auswahl aus der oben stehenden Liste \"spooky_device_list\"\n    // ------------------------------------------------------------------------\n    if (use_device_list)\n    {\n      var devices_in_list = spooky_device_list.length;\n      random_device = Math.floor(Math.random() * devices_in_list);\n      device_entity = spooky_device_list[random_device];\n    }\n    // ------------------------------------------------------------------------\n    // Auswahl aus den Geräte-Gruppen \"spooky_lights\" und \"spooky_switches\"\n    // ------------------------------------------------------------------------\n    else\n    {\n      // ------------------------------------------------------------------------\n      // Daten der Spooky-Gruppen \"Lights\" und \"Switches\" einlesen\n      // ------------------------------------------------------------------------\n      var spooky_lights   = msg.spooky_lights;\n      var spooky_switches = msg.spooky_switches;\n      // ------------------------------------------------------------------------\n      // Anzahl der vorhandenen Einträge (Geräte) je Gruppe ermitteln\n      // ------------------------------------------------------------------------\n      var count_l = spooky_lights.daten.attributes.entity_id.length;\n      var count_s = spooky_switches.daten.attributes.entity_id.length;\n      // ------------------------------------------------------------------------\n      // Gruppe auswählen (gewichtet nach der Anzahl aller Einträge der Gruppen)\n      // ------------------------------------------------------------------------\n      var range_max = count_l + count_s;\n      var random_val = Math.floor(Math.random() * range_max) + 1;\n      var group = \"\";\n      if (count_l > 0 && count_s > 0)\n      {\n        if (random_val > count_l)\n        {\n          group = \"switch\";\n        }\n        else\n        {\n          group = \"light\";\n        }\n      }\n      else\n      {\n        if (count_l > 0)\n        {\n          group = \"light\";\n        }\n        if (count_s > 0)\n        {\n          group = \"switch\";\n        }\n      }\n      // ------------------------------------------------------------------------\n      // Wenn die Gruppe \"light\" verwendet werden soll, dann einen zufälligen\n      // Eintrag aus dieser Gruppe auswählen\n      // ------------------------------------------------------------------------\n      if (group == \"light\")\n      {\n        random_device = Math.floor(Math.random() * count_l);\n        device_entity = spooky_lights.daten.attributes.entity_id[random_device];\n      }\n      // ------------------------------------------------------------------------\n      // Wenn die Gruppe \"switch\" verwendet werden soll, dann einen zufälligen\n      // Eintrag aus dieser Gruppe auswählen\n      // ------------------------------------------------------------------------\n      if (group == \"switch\")\n      {\n        random_device = Math.floor(Math.random() * count_s);\n        device_entity = spooky_switches.daten.attributes.entity_id[random_device];\n      }\n    }\n    // ------------------------------------------------------------------------\n    // Alten Payload löschen, um keine Daten daraus mit weiterzuleiten\n    // ------------------------------------------------------------------------\n    msg.payload = [];\n    // ------------------------------------------------------------------------\n    // Neue Meldung erzeugen und versenden\n    // ------------------------------------------------------------------------\n    var newMsg = {};\n    newMsg.payload = {\n      entity_id: device_entity\n    }\n    node.send(newMsg); // asynchron\n    node.done();\n    // return newMsg; // synchron\n  }\n}\n// ----------------------------------------------------------------------------\n// Skript OHNE Rückmeldung beenden (Daten wurden schon mit node.send gesendet)\n// ----------------------------------------------------------------------------\nreturn null;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":250,"y":200,"wires":[["63dc0660d2e0af35"]]},{"id":"ca65e9095b287b84","type":"poll-state","z":"24ffde2171d8d251","name":"1. Alle 5 Minuten triggern","server":"e5ff3427.b49de8","version":3,"exposeAsEntityConfig":"","updateInterval":"5","updateIntervalType":"num","updateIntervalUnits":"minutes","outputInitially":false,"outputOnChanged":false,"entityId":"input_boolean.spookymode","stateType":"str","ifState":"on","ifStateType":"str","ifStateOperator":"is","outputs":2,"outputProperties":[{"property":"spooky_mode","propertyType":"msg","value":"{\"daten\":$entities(\"input_boolean.spookymode\")}","valueType":"jsonata"},{"property":"sun_state","propertyType":"msg","value":"{\"daten\":$entities(\"sun.sun\")}","valueType":"jsonata"},{"property":"spooky_lights","propertyType":"msg","value":"{\"daten\":$entities(\"light.spooky_lights\")}","valueType":"jsonata"},{"property":"spooky_switches","propertyType":"msg","value":"{\"daten\":$entities(\"switch.spooky_switches\")}","valueType":"jsonata"}],"x":170,"y":120,"wires":[["a5b19c82b607d17d"],[]]},{"id":"e5ff3427.b49de8","type":"server","name":"Home Assistant","addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"","connectionDelay":false,"cacheJson":false,"heartbeat":false,"heartbeatInterval":"","statusSeparator":"","enableGlobalContextStore":false}]