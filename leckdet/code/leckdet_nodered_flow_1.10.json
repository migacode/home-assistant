[{"id":"956bc4297c1cab96","type":"tab","label":"LeckDet 1.10","disabled":false,"info":"","env":[]},{"id":"a6cf10b9e66d50f4","type":"inject","z":"956bc4297c1cab96","name":"Aktuellen Zählerstand anzeigen","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":180,"wires":[["96399dbbca351119"]]},{"id":"96399dbbca351119","type":"api-current-state","z":"956bc4297c1cab96","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":180,"wires":[["e2c10afd16143a8c"]]},{"id":"e2c10afd16143a8c","type":"debug","z":"956bc4297c1cab96","name":"Aktueller Zählerstand","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"leckdet_stand_aktuell","targetType":"msg","statusVal":"","statusType":"auto","x":800,"y":180,"wires":[]},{"id":"68e03ea484a9122c","type":"debug","z":"956bc4297c1cab96","name":"Zwischen-Zählerstand 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.daten","targetType":"msg","statusVal":"","statusType":"auto","x":1150,"y":380,"wires":[]},{"id":"d08bc98b7746e7af","type":"comment","z":"956bc4297c1cab96","name":"Werte anzeigen","info":"","x":120,"y":120,"wires":[]},{"id":"0ddb27093239dc63","type":"comment","z":"956bc4297c1cab96","name":"Automatisierungen","info":"","x":130,"y":320,"wires":[]},{"id":"e4c7843c5405702a","type":"comment","z":"956bc4297c1cab96","name":"LeckDet 1.10 | Leckage-Detektiv","info":"","x":170,"y":60,"wires":[]},{"id":"0ddf1ddafa951312","type":"inject","z":"956bc4297c1cab96","name":"Erste Messung um 03:00 Uhr","props":[],"repeat":"","crontab":"00 03 * * *","once":false,"onceDelay":0.1,"topic":"","x":190,"y":380,"wires":[["c38b168be3d73f96"]]},{"id":"1d52dafc52f99d23","type":"inject","z":"956bc4297c1cab96","name":"Dritte Messung um 03:30 Uhr","props":[],"repeat":"","crontab":"30 03 * * *","once":false,"onceDelay":0.1,"topic":"","x":190,"y":500,"wires":[["2079ed93dc690631"]]},{"id":"0ae3e4a39c93563b","type":"inject","z":"956bc4297c1cab96","name":"Vierte Messung um 03:45 Uhr","props":[],"repeat":"","crontab":"45 03 * * *","once":false,"onceDelay":0.1,"topic":"","x":190,"y":560,"wires":[["8cb8b787f85d4ed0"]]},{"id":"c38b168be3d73f96","type":"api-current-state","z":"956bc4297c1cab96","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":380,"wires":[["3d1860023d5bac91"]]},{"id":"2079ed93dc690631","type":"api-current-state","z":"956bc4297c1cab96","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":500,"wires":[["e02b82f394365c71"]]},{"id":"8cb8b787f85d4ed0","type":"api-current-state","z":"956bc4297c1cab96","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":560,"wires":[["8db1d78bc8b731f1"]]},{"id":"8db1d78bc8b731f1","type":"function","z":"956bc4297c1cab96","name":"Auf Leckage prüfen","func":"// ============================================================================\n// Leckage Detektiv - Erkennung unerwünschter Verbräuche durch Rohrlecks o.a.\n// Version: 1.10\n// Datum:   26.01.2025\n// Quelle:  https://github.com/migacode/home-assistant\n// =============================================================================\n// Konfiguration\n// =============================================================================\n// -----------------------------------------------------------------------------\n// Mindestdifferenz zwischen Zählerständen, ab der eine Leckage erkannt wird -\n// kann dazu genutzt werden, permanente gewollte Entnahmen zu berücksichtigen\n// -----------------------------------------------------------------------------\nvar leck_min_diff = 0.00009;\n// =============================================================================\n// Initialisierung\n// =============================================================================\n// -----------------------------------------------------------------------------\n// Alle zuvor ermittelten und zwischengespeicherten Zählerstände einlesen\n// -----------------------------------------------------------------------------\nvar leckdet_aktuell = parseFloat(msg.leckdet_stand_aktuell);\n\nvar leckdet_stand_1 = global.get(\"leckdet_stand_1\");\nvar t_leckdet_stand_1 = typeof leckdet_stand_1;\nif (leckdet_stand_1 == '' || t_leckdet_stand_1 === 'undefined' || t_leckdet_stand_1 === null) { leckdet_stand_1 = 0; } else { leckdet_stand_1 = parseFloat(leckdet_stand_1) }\nvar leckdet_stand_2 = global.get(\"leckdet_stand_2\");\nvar t_leckdet_stand_2 = typeof leckdet_stand_2;\nif (leckdet_stand_2 == '' || t_leckdet_stand_2 === 'undefined' || t_leckdet_stand_2 === null) { leckdet_stand_2 = 0; } else { leckdet_stand_2 = parseFloat(leckdet_stand_2) }\nvar leckdet_stand_3 = global.get(\"leckdet_stand_3\");\nvar t_leckdet_stand_3 = typeof leckdet_stand_3;\nif (leckdet_stand_3 == '' || t_leckdet_stand_3 === 'undefined' || t_leckdet_stand_3 === null) { leckdet_stand_3 = 0; } else { leckdet_stand_3 = parseFloat(leckdet_stand_3) }\n\n// -----------------------------------------------------------------------------\n// Differenzen zwischen den Zählerständen berechnen\n// -----------------------------------------------------------------------------\nvar diff_1 = Math.abs(leckdet_stand_2 - leckdet_stand_1);\nvar diff_2 = Math.abs(leckdet_stand_3 - leckdet_stand_2);\nvar diff_3 = Math.abs(leckdet_aktuell - leckdet_stand_3);\n// =============================================================================\n// Here we go ...\n// =============================================================================\n// -----------------------------------------------------------------------------\n// Alten Payload löschen, um keine Daten daraus mit weiterzuleiten\n// -----------------------------------------------------------------------------\nmsg.payload = [];\nvar output = {};\n// -----------------------------------------------------------------------------\n// Ausgabe erzeugen (nur zum testen, nicht relevant für die Funktion selbst)\n// -----------------------------------------------------------------------------\noutput.payload = {\n  msg: \"Aktuell : \" + leckdet_aktuell + \", Zähler 1 : \" + leckdet_stand_1 + \", Zähler 2 : \" + leckdet_stand_2 + \", Zähler 3 : \" + leckdet_stand_3 + \", D1: \" + diff_1 + \", D2: \" + diff_2 + \", D3: \" + diff_3\n}\n// -----------------------------------------------------------------------------\n// Wenn bei allen Messungen größere Verlustmengen ermittelt wurden als erlaubt\n// existiert vermutlich eine Leckage - in dem Fall Ausgang 1 triggern ...\n// -----------------------------------------------------------------------------\nif (diff_1 >= leck_min_diff && diff_2 >= leck_min_diff && diff_3 >= leck_min_diff)\n{\n  node.send([output, null]); // asynchron\n  node.done();\n  // return [output, null]; // synchron\n}\n// -----------------------------------------------------------------------------\n// ... sonst Ausgang 2 triggern\n// -----------------------------------------------------------------------------\nelse\n{\n  node.send([null, output]); // asynchron\n  node.done();\n  // return [null, output]; // synchron\n}\n// -----------------------------------------------------------------------------\n// Skript OHNE Rückmeldung beenden (Daten wurden schon mit node.send gesendet)\n// -----------------------------------------------------------------------------\nreturn null;","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":560,"wires":[["3691640b37969def","ab54a5292ec86c09","6e77948536c38cc5"],["2c1a68d78e453329"]]},{"id":"3691640b37969def","type":"api-call-service","z":"956bc4297c1cab96","name":"3.a Nachricht an Telegram senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"telegram_michael","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : \"Leckage entdeckt!\" }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1120,"y":680,"wires":[[]]},{"id":"6e77948536c38cc5","type":"api-call-service","z":"956bc4297c1cab96","name":"3.a Nachricht an Dashboard senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"persistent_notification","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : \"Leckage entdeckt!\" }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1130,"y":560,"wires":[[]]},{"id":"ab54a5292ec86c09","type":"api-call-service","z":"956bc4297c1cab96","name":"3.b Nachricht an HA-App senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_galaxy_von_michael","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : \"Leckage entdeckt!\" }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1120,"y":620,"wires":[[]]},{"id":"3ba21f6cf2cc9e25","type":"debug","z":"956bc4297c1cab96","name":"Zwischen-Zählerstände","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.daten","targetType":"msg","statusVal":"","statusType":"auto","x":810,"y":240,"wires":[]},{"id":"87134398d1fb6bcd","type":"inject","z":"956bc4297c1cab96","name":"Zwischen-Zählerstände anzeigen","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":240,"wires":[["4da86e18962aedf4"]]},{"id":"2c1a68d78e453329","type":"debug","z":"956bc4297c1cab96","name":"Keine Leckage entdeckt","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1090,"y":740,"wires":[]},{"id":"4da86e18962aedf4","type":"function","z":"956bc4297c1cab96","name":"Zwischen-Zählerstände einlesen","func":"var leckdet_stand_1 = global.get(\"leckdet_stand_1\");\nvar t_leckdet_stand_1 = typeof leckdet_stand_1;\nif (leckdet_stand_1 == '' || t_leckdet_stand_1 === 'undefined' || t_leckdet_stand_1 === null) { leckdet_stand_1 = 0; }\nvar leckdet_stand_2 = global.get(\"leckdet_stand_2\");\nvar t_leckdet_stand_2 = typeof leckdet_stand_2;\nif (leckdet_stand_2 == '' || t_leckdet_stand_2 === 'undefined' || t_leckdet_stand_2 === null) { leckdet_stand_2 = 0; }\nvar leckdet_stand_3 = global.get(\"leckdet_stand_3\");\nvar t_leckdet_stand_3 = typeof leckdet_stand_3;\nif (leckdet_stand_3 == '' || t_leckdet_stand_3 === 'undefined' || t_leckdet_stand_3 === null) { leckdet_stand_3 = 0; }\nmsg.payload = [];\nvar output = {};\noutput.payload = {\n    daten: \"Zähler 1: \" + leckdet_stand_1 + \", Zähler 2: \" + leckdet_stand_2 + \", Zähler 3: \" + leckdet_stand_3\n}\nnode.send(output);\nnode.done();\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":240,"wires":[["3ba21f6cf2cc9e25"]]},{"id":"3d1860023d5bac91","type":"function","z":"956bc4297c1cab96","name":"Zwischen-Zählerstand 1 speichern","func":"var leckdet_stand_1 = parseFloat(msg.leckdet_stand_aktuell);\nglobal.set(\"leckdet_stand_1\", leckdet_stand_1);\nmsg.payload = [];\nvar output = {};\noutput.payload = {\n  daten: \"Zähler 1: \" + leckdet_stand_1\n}\nnode.send(output);\nnode.done();\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":380,"wires":[["68e03ea484a9122c"]]},{"id":"56254e7ed3d8964e","type":"api-current-state","z":"956bc4297c1cab96","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":440,"wires":[["65e1af9565b9a8b0"]]},{"id":"ca2a86d6e290bddc","type":"inject","z":"956bc4297c1cab96","name":"Zweite Messung um 03:15 Uhr","props":[],"repeat":"","crontab":"15 03 * * *","once":false,"onceDelay":0.1,"topic":"","x":190,"y":440,"wires":[["56254e7ed3d8964e"]]},{"id":"d3b39948d77a6e7c","type":"debug","z":"956bc4297c1cab96","name":"Zwischen-Zählerstand 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.daten","targetType":"msg","statusVal":"","statusType":"auto","x":1150,"y":440,"wires":[]},{"id":"65e1af9565b9a8b0","type":"function","z":"956bc4297c1cab96","name":"Zwischen-Zählerstand 2 speichern","func":"var leckdet_stand_2 = parseFloat(msg.leckdet_stand_aktuell);\nglobal.set(\"leckdet_stand_2\", leckdet_stand_2);\nmsg.payload = [];\nvar output = {};\noutput.payload = {\n  daten: \"Zähler 2: \" + leckdet_stand_2\n}\nnode.send(output);\nnode.done();\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":440,"wires":[["d3b39948d77a6e7c"]]},{"id":"264f86a906dd1c47","type":"debug","z":"956bc4297c1cab96","name":"Zwischen-Zählerstand 3","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.daten","targetType":"msg","statusVal":"","statusType":"auto","x":1150,"y":500,"wires":[]},{"id":"e02b82f394365c71","type":"function","z":"956bc4297c1cab96","name":"Zwischen-Zählerstand 3 speichern","func":"var leckdet_stand_3 = parseFloat(msg.leckdet_stand_aktuell);\nglobal.set(\"leckdet_stand_3\", leckdet_stand_3);\nmsg.payload = [];\nvar output = {};\noutput.payload = {\n  daten: \"Zähler 3: \" + leckdet_stand_3\n}\nnode.send(output);\nnode.done();\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":500,"wires":[["264f86a906dd1c47"]]},{"id":"e5ff3427.b49de8","type":"server","name":"Home Assistant","addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"","connectionDelay":false,"cacheJson":false,"heartbeat":false,"heartbeatInterval":"","statusSeparator":"","enableGlobalContextStore":false}]