[{"id":"f45ebed001cf5c2b","type":"tab","label":"LeckDet 1.10","disabled":false,"info":"","env":[]},{"id":"6c46c5f8c69aa031","type":"inject","z":"f45ebed001cf5c2b","name":"Aktuellen Zählerstand anzeigen","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":180,"wires":[["3652081d4bddda91"]]},{"id":"3652081d4bddda91","type":"api-current-state","z":"f45ebed001cf5c2b","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":180,"wires":[["e2faf40370f96fbc"]]},{"id":"e2faf40370f96fbc","type":"debug","z":"f45ebed001cf5c2b","name":"Aktueller Zählerstand","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"leckdet_stand_aktuell","targetType":"msg","statusVal":"","statusType":"auto","x":800,"y":180,"wires":[]},{"id":"d1b3140945b69a8e","type":"debug","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstand 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.daten","targetType":"msg","statusVal":"","statusType":"auto","x":1150,"y":380,"wires":[]},{"id":"f202a5f25f9e95f1","type":"comment","z":"f45ebed001cf5c2b","name":"Werte anzeigen","info":"","x":120,"y":120,"wires":[]},{"id":"e2924380dca78a86","type":"comment","z":"f45ebed001cf5c2b","name":"Automatisierungen","info":"","x":130,"y":320,"wires":[]},{"id":"07892daa8606974c","type":"comment","z":"f45ebed001cf5c2b","name":"LeckDet 1.10 | Leckage-Detektiv","info":"","x":170,"y":60,"wires":[]},{"id":"03a76dc82508db30","type":"inject","z":"f45ebed001cf5c2b","name":"Erste Messung um 03:00 Uhr","props":[],"repeat":"","crontab":"00 03 * * *","once":false,"onceDelay":0.1,"topic":"","x":190,"y":380,"wires":[["e87866f931e20123"]]},{"id":"a9adb841bd09dd1d","type":"inject","z":"f45ebed001cf5c2b","name":"Dritte Messung um 03:30 Uhr","props":[],"repeat":"","crontab":"30 03 * * *","once":false,"onceDelay":0.1,"topic":"","x":190,"y":500,"wires":[["c2f0c25928b0d43b"]]},{"id":"a6a6593736686d75","type":"inject","z":"f45ebed001cf5c2b","name":"Vierte Messung um 03:45 Uhr","props":[],"repeat":"","crontab":"45 03 * * *","once":false,"onceDelay":0.1,"topic":"","x":190,"y":560,"wires":[["443920ba336ec1af"]]},{"id":"e87866f931e20123","type":"api-current-state","z":"f45ebed001cf5c2b","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":380,"wires":[["a8d74f5f443c4a1f"]]},{"id":"c2f0c25928b0d43b","type":"api-current-state","z":"f45ebed001cf5c2b","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":500,"wires":[["e3a5a4067125e651"]]},{"id":"443920ba336ec1af","type":"api-current-state","z":"f45ebed001cf5c2b","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":560,"wires":[["d058b1985a44cf2f"]]},{"id":"d058b1985a44cf2f","type":"function","z":"f45ebed001cf5c2b","name":"Auf Leckage prüfen","func":"// ============================================================================\n// Leckage Detektiv - Erkennung unerwünschter Verbräuche durch Rohrlecks o.a.\n// Version: 1.10\n// Datum:   26.01.2025\n// Quelle:  https://github.com/migacode/home-assistant\n// =============================================================================\n// Konfiguration\n// =============================================================================\n// -----------------------------------------------------------------------------\n// Mindestdifferenz zwischen Zählerständen, ab der eine Leckage erkannt wird -\n// kann dazu genutzt werden, permanente gewollte Entnahmen zu berücksichtigen\n// -----------------------------------------------------------------------------\nvar leck_min_diff = 0.00009;\n// =============================================================================\n// Initialisierung\n// =============================================================================\n// -----------------------------------------------------------------------------\n// Alle zuvor ermittelten und zwischengespeicherten Zählerstände einlesen\n// -----------------------------------------------------------------------------\nvar leckdet_aktuell = parseFloat(msg.leckdet_stand_aktuell);\n\nvar leckdet_stand_1 = global.get(\"leckdet_stand_1\");\nvar t_leckdet_stand_1 = typeof leckdet_stand_1;\nif (leckdet_stand_1 == '' || t_leckdet_stand_1 === 'undefined' || t_leckdet_stand_1 === null) { leckdet_stand_1 = 0; } else { leckdet_stand_1 = parseFloat(leckdet_stand_1) }\nvar leckdet_stand_2 = global.get(\"leckdet_stand_2\");\nvar t_leckdet_stand_2 = typeof leckdet_stand_2;\nif (leckdet_stand_2 == '' || t_leckdet_stand_2 === 'undefined' || t_leckdet_stand_2 === null) { leckdet_stand_2 = 0; } else { leckdet_stand_2 = parseFloat(leckdet_stand_2) }\nvar leckdet_stand_3 = global.get(\"leckdet_stand_3\");\nvar t_leckdet_stand_3 = typeof leckdet_stand_3;\nif (leckdet_stand_3 == '' || t_leckdet_stand_3 === 'undefined' || t_leckdet_stand_3 === null) { leckdet_stand_3 = 0; } else { leckdet_stand_3 = parseFloat(leckdet_stand_3) }\n\n// -----------------------------------------------------------------------------\n// Differenzen zwischen den Zählerständen berechnen\n// -----------------------------------------------------------------------------\nvar diff_1 = Math.abs(leckdet_stand_2 - leckdet_stand_1);\nvar diff_2 = Math.abs(leckdet_stand_3 - leckdet_stand_2);\nvar diff_3 = Math.abs(leckdet_aktuell - leckdet_stand_3);\n// =============================================================================\n// Here we go ...\n// =============================================================================\n// -----------------------------------------------------------------------------\n// Alten Payload löschen, um keine Daten daraus mit weiterzuleiten\n// -----------------------------------------------------------------------------\nmsg.payload = [];\nvar output = {};\n// -----------------------------------------------------------------------------\n// Ausgabe erzeugen (nur zum testen, nicht relevant für die Funktion selbst)\n// -----------------------------------------------------------------------------\noutput.payload = {\n  msg: \"Aktuell : \" + leckdet_aktuell + \", Zähler 1 : \" + leckdet_stand_1 + \", Zähler 2 : \" + leckdet_stand_2 + \", Zähler 3 : \" + leckdet_stand_3 + \", D1: \" + diff_1 + \", D2: \" + diff_2 + \", D3: \" + diff_3\n}\n// -----------------------------------------------------------------------------\n// Wenn bei allen Messungen größere Verlustmengen ermittelt wurden als erlaubt\n// existiert vermutlich eine Leckage - in dem Fall Ausgang 1 triggern ...\n// -----------------------------------------------------------------------------\nif (diff_1 >= leck_min_diff && diff_2 >= leck_min_diff && diff_3 >= leck_min_diff)\n{\n  node.send([output, null]); // asynchron\n  node.done();\n  // return [output, null]; // synchron\n}\n// -----------------------------------------------------------------------------\n// ... sonst Ausgang 2 triggern\n// -----------------------------------------------------------------------------\nelse\n{\n  node.send([null, output]); // asynchron\n  node.done();\n  // return [null, output]; // synchron\n}\n// -----------------------------------------------------------------------------\n// Skript OHNE Rückmeldung beenden (Daten wurden schon mit node.send gesendet)\n// -----------------------------------------------------------------------------\nreturn null;","outputs":2,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":560,"wires":[["3acdb51f620446f8","635364c752178d13","f4eab1009775f4e2"],["73ab8766a26eb78f"]]},{"id":"3acdb51f620446f8","type":"api-call-service","z":"f45ebed001cf5c2b","name":"3.c Nachricht an Telegram senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"telegram_michael","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : \"Leckage entdeckt!\" }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1120,"y":680,"wires":[[]]},{"id":"f4eab1009775f4e2","type":"api-call-service","z":"f45ebed001cf5c2b","name":"3.a Nachricht an Dashboard senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"persistent_notification","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : \"Leckage entdeckt!\" }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1130,"y":560,"wires":[[]]},{"id":"635364c752178d13","type":"api-call-service","z":"f45ebed001cf5c2b","name":"3.b Nachricht an HA-App senden","server":"e5ff3427.b49de8","version":5,"debugenabled":false,"domain":"notify","service":"mobile_app_galaxy_von_michael","areaId":[],"deviceId":[],"entityId":[],"data":"{ \"message\" : \"Leckage entdeckt!\" }","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1120,"y":620,"wires":[[]]},{"id":"63492da40d08160f","type":"debug","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstände","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.daten","targetType":"msg","statusVal":"","statusType":"auto","x":810,"y":240,"wires":[]},{"id":"de1465574b7722c2","type":"inject","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstände anzeigen","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":240,"wires":[["14e91f7471560957"]]},{"id":"73ab8766a26eb78f","type":"debug","z":"f45ebed001cf5c2b","name":"Keine Leckage entdeckt","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1090,"y":740,"wires":[]},{"id":"14e91f7471560957","type":"function","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstände einlesen","func":"var leckdet_stand_1 = global.get(\"leckdet_stand_1\");\nvar t_leckdet_stand_1 = typeof leckdet_stand_1;\nif (leckdet_stand_1 == '' || t_leckdet_stand_1 === 'undefined' || t_leckdet_stand_1 === null) { leckdet_stand_1 = 0; }\nvar leckdet_stand_2 = global.get(\"leckdet_stand_2\");\nvar t_leckdet_stand_2 = typeof leckdet_stand_2;\nif (leckdet_stand_2 == '' || t_leckdet_stand_2 === 'undefined' || t_leckdet_stand_2 === null) { leckdet_stand_2 = 0; }\nvar leckdet_stand_3 = global.get(\"leckdet_stand_3\");\nvar t_leckdet_stand_3 = typeof leckdet_stand_3;\nif (leckdet_stand_3 == '' || t_leckdet_stand_3 === 'undefined' || t_leckdet_stand_3 === null) { leckdet_stand_3 = 0; }\nmsg.payload = [];\nvar output = {};\noutput.payload = {\n    daten: \"Zähler 1: \" + leckdet_stand_1 + \", Zähler 2: \" + leckdet_stand_2 + \", Zähler 3: \" + leckdet_stand_3\n}\nnode.send(output);\nnode.done();\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":240,"wires":[["63492da40d08160f"]]},{"id":"a8d74f5f443c4a1f","type":"function","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstand 1 speichern","func":"var leckdet_stand_1 = parseFloat(msg.leckdet_stand_aktuell);\nglobal.set(\"leckdet_stand_1\", leckdet_stand_1);\nmsg.payload = [];\nvar output = {};\noutput.payload = {\n  daten: \"Zähler 1: \" + leckdet_stand_1\n}\nnode.send(output);\nnode.done();\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":380,"wires":[["d1b3140945b69a8e"]]},{"id":"6b80baef66d5d118","type":"api-current-state","z":"f45ebed001cf5c2b","name":"Aktuellen Zählerstand einlesen","server":"e5ff3427.b49de8","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"is","entity_id":"sensor.watermeter_raw","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"leckdet_stand_aktuell","propertyType":"msg","value":"","valueType":"entityState"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":510,"y":440,"wires":[["84fd3acd115181e6"]]},{"id":"01866d84a04fd4d5","type":"inject","z":"f45ebed001cf5c2b","name":"Zweite Messung um 03:15 Uhr","props":[],"repeat":"","crontab":"15 03 * * *","once":false,"onceDelay":0.1,"topic":"","x":190,"y":440,"wires":[["6b80baef66d5d118"]]},{"id":"353b3f936133f16f","type":"debug","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstand 2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.daten","targetType":"msg","statusVal":"","statusType":"auto","x":1150,"y":440,"wires":[]},{"id":"84fd3acd115181e6","type":"function","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstand 2 speichern","func":"var leckdet_stand_2 = parseFloat(msg.leckdet_stand_aktuell);\nglobal.set(\"leckdet_stand_2\", leckdet_stand_2);\nmsg.payload = [];\nvar output = {};\noutput.payload = {\n  daten: \"Zähler 2: \" + leckdet_stand_2\n}\nnode.send(output);\nnode.done();\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":440,"wires":[["353b3f936133f16f"]]},{"id":"c857e7660a23620a","type":"debug","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstand 3","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.daten","targetType":"msg","statusVal":"","statusType":"auto","x":1150,"y":500,"wires":[]},{"id":"e3a5a4067125e651","type":"function","z":"f45ebed001cf5c2b","name":"Zwischen-Zählerstand 3 speichern","func":"var leckdet_stand_3 = parseFloat(msg.leckdet_stand_aktuell);\nglobal.set(\"leckdet_stand_3\", leckdet_stand_3);\nmsg.payload = [];\nvar output = {};\noutput.payload = {\n  daten: \"Zähler 3: \" + leckdet_stand_3\n}\nnode.send(output);\nnode.done();\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":500,"wires":[["c857e7660a23620a"]]},{"id":"e5ff3427.b49de8","type":"server","name":"Home Assistant","addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"","connectionDelay":false,"cacheJson":false,"heartbeat":false,"heartbeatInterval":"","statusSeparator":"","enableGlobalContextStore":false}]